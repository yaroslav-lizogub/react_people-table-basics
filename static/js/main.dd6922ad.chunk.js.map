{"version":3,"sources":["components/HomePage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","components/NotFoundPage.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","props","to","text","isActive","classNames","Navbar","role","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","slug","sex","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","Loader","PeoplePage","useState","setPeople","isLoading","setIsloading","hasError","setHasError","useEffect","res","preparedPeople","_","arr","find","catch","finally","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dd6922ad.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = (props) => {\n  const { to, text } = props;\n\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person: { name, slug, sex } } = props;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const { people } = props;\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              { 'has-background-warning': person.slug === slug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\nimport { Loader } from './Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsloading(true);\n\n    getPeople()\n      .then((res) => {\n        const preparedPeople = res.map((person, _, arr) => ({\n          ...person,\n          mother: arr.find((mother) => mother.name === person.motherName),\n          father: arr.find((father) => father.name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && !hasError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}